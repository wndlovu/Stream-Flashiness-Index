
library(maps)
library(tidyverse)
library(sf)
library(sp)
library("rnaturalearth")
library("rnaturalearthdata")
library(ggalt)
library(rgeos)     

library(ggspatial)


# bbox for reference_sites xmin: -78.67697 ymin: 38.22892 xmax: -67.7688 ymax: 47.23739
ggplot(reference_sites) + 
  annotation_map_tile(type = "osm", zoomin = 0) + 
  geom_sf(alpha = 0.7)


reference_sites %>%
  st_geometry() %>%
  plot(col = gray.colors(nrow(reference_sites)))

data(us.cities)
capitals <- subset(us.cities, capital == 2)

ggplot(data = world) +
  geom_sf(fill = "white") +
  #annotation_map_tile(zoom = 6, type = "osm") + 
  borders("state", colour = "black", fill = "grey90") +
  geom_point(data = reference_sites, aes(x = long, y = lat), size = .5, shape = 21) + 
  #scale_fill_gradient2(limits = c(-1.2,1.2),midpoint = 0, low = "#1d1369", mid = "white", high = "#691313", breaks = c(-1.2,-0.5,0,0.5,1.2)) +
  coord_sf(xlim = c(-79.67697,-64.7688), ylim = c(34.22892, 49.23739), expand = FALSE)+
  
  theme(axis.line = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())+
  theme_map()


#reference_sites <- st_as_sfc(reference_sites, coords = c("long", "lat"))


  
reference_sites$geom = st_sfc(reference_sites$LAT_GAGE, reference_sites$LNG_GAGE)
df = st_as_sf(d)



ggplot(data = world) +
  geom_sf(fill = "white") +
  geom_point(data = reference_sites, size = .2, 
             shape = 21, ) + scale_fill_gradient2(limits = c(-1.2,1.2),midpoint = 0, low = "#1d1369", mid = "white", high = "#691313", breaks = c(-1.2,-0.5,0,0.5,1.2)) +
  coord_sf(xlim = c(-78.67697,-67.76880), ylim = c(-67.76880, 38.22892), expand = FALSE)+theme_classic()


icons3 <- makeIcon(
  iconUrl = "http://leafletjs.com/examples/custom-icons/leaf-green.png",
  iconWidth = 38, iconHeight = 95,
  iconAnchorX = 22, iconAnchorY = 54
)

white_house <- tibble(
  address = "The White House, Washington, DC"
) %>%
  tidygeocoder::geocode(address, method = "osm")

reference_sites %>% 
  st_bbox()

leaflet() %>%
  addProviderTiles(providers$Esri.WorldImagery, options = providerTileOptions(opacity = 5), group = "Satelite") %>% 
  addTiles(group = "Map") %>% 
  addMarkers(data = reference_sites, options = markerOptions(size = .03)) #%>% 
  #setView(lng = -110, lat = 50, zoom = 7)
  #coord_sf(xlim = c(-135,-110), ylim = c(25, 50), expand = FALSE)+theme_classic()

